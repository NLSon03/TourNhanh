@model TourNhanh.Models.Blog

@{
    ViewData["Title"] = "Display";
}


<div>
    <img class="img-fluid w-100 rounded-top" src="@Model.ImageUrl" alt="Image">
</div>
<div>
    <h2>Tác giả: @Model.Author  | @Model.CreatedAt  </h2>
</div>

<hr />
<div class="row g-4 justify-content-center">
    <div class="col-lg-8">
        <!-- Độ rộng của phần nội dung -->
        <div class="px-3 py-2">
            <!-- Lề của phần nội dung -->
            @Html.Raw(Model.Content)
        </div>
    </div>
</div>
<div id="comments">
	@if (Model.Comments != null && Model.Comments.Any())
	{
		<hr />
		<h3>Comments</h3>

		<!-- Add an ID to the comment list -->
		<ul id="comment-list">
			@foreach (var comment in Model.Comments)
			{
				<!-- Each comment item -->
				<li class="comment-item">
					<!-- Div to hold comment content -->
					<div class="comment-content px-3 py-2">
						<!-- Comment content -->
						<p>@comment.Author: @comment.Content | @comment.CreatedAt</p>
					</div>
				</li>
			}
		</ul>
	}

	<!-- Comment form -->
	<form id="comment-form" method="post">
		<textarea id="comment-content" name="content" placeholder="Add your comment" required></textarea>
		<button type="submit">Submit</button>
	</form>
</div>


@section Scripts {
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<script type="text/javascript">
		$(document).ready(function () {
			$('#comment-form').submit(function (event) {
				event.preventDefault();

				var content = $('#comment-content').val();
				var blogId = @Model.Id; // Assuming you have the blog ID in your model

				$.ajax({
					url: '@Url.Action("AddComment", "Blog")',
					type: 'POST',
					data: { id: blogId, content: content },
					success: function (response) {
						if (response.success) {
							var newComment = '<li class="comment-item">' +
								'<div class="comment-content px-3 py-2">' +
								'<p>' + response.author + ': ' + content + ' | Just now</p>' +
								'</div>' +
								'</li>';
							$('#comment-list').append(newComment);
							$('#comment-content').val(''); // Clear the textarea
						} else {
							alert('Error adding comment');
						}
					}
				});
			});
		});
	</script>


	<script>
		// Toast function
		function toast({
			title = "",
			message = "",
			type = "info",
			duration = 3000,
		}) {
			const main = document.getElementById("toast");
			if (main) {
				const toast = document.createElement("div");

				// Auto remove toast
				const autoRemoveId = setTimeout(function () {
					main.removeChild(toast);
				}, duration + 1000);

				// Remove toast when click
				toast.onclick = function (e) {
					if (e.target.closest(".toast__close")) {
						main.removeChild(toast);
						clearTimeout(autoRemoveId);
					}
				};

				const icons = {
					success: "fa-solid fa-circle-check",
					info: "fa-solid fa-circle-info",
					warning: "fa-solid fa-circle-exclamation",
					error: "fa-solid fa-circle-xmark",
				};
				const icon = icons[type];
				const delay = (duration / 1000).toFixed(2);

				toast.classList.add("toast", toast--${ type });
				toast.style.animation = slideInLeft ease .3s, fadeOut linear 1s 3s forwards;

				toast.innerHTML = `
									<div class="toast__icon">
										<i class="${icon}"></i>
									</div>
									<div class="toast__body">
										<h3 class="toast__title">${title}</h3>
										<p class="toast__msg">${message}</p>
									</div>
									<div class="toast__close">
										<i class="fa-solid fa-xmark"></i>
									</div>
								`;
				main.appendChild(toast);
			}
		}

		// toast({
		//   title: "Success",
		//   message:
		//     "Tham gia nhóm Học lập trình tại F8 trên Facebook để cùng nhau trao đổi trong quá trình học tập ❤️",
		//   type: "success",
		//   duration: 3000,
		// });

		function showSuccessToast() {
			toast({
				title: "Thành Công!",
				message: "Thêm bình luận thành công",
				type: "success",
				duration: 3000,
			});
		}

		function showErrorToast() {
			toast({
				title: "Thất Bại!",
				message: "Thêm bình luận thất bại!",
				type: "error",
				duration: 5000,
			});
		}
	</script>
}


<style>
	* Modifier */
	.btn--size-l {
		padding: 16px 56px;
	}

	.btn--size-s {
		padding: 8px 32px;
	}

	.btn:hover {
		opacity: 0.8;
	}

	.btn + .btn {
		margin-left: 16px;
	}

	.btn--success {
		background-color: #71be34;
	}

	.btn--warn {
		background-color: #ffb702;
	}

	.btn--danger {
		background-color: #ff623d;
	}

	.btn--disabled {
		opacity: 0.5 !important;
		cursor: default;
	}

	/* ======= Toast message ======== */

	#toast {
		position: fixed;
		top: 32px;
		right: 32px;
		z-index: 99999;
	}

	.toast {
		display: flex;
		align-items: center;
		background-color: #fff;
		border-left: 4px solid;
		padding: 20px 0;
		min-width: 400;
		min-width: 450;
		border-radius: 2px;
		box-shadow: 0 5px 8px rgba(0, 0, 0, 0.08);
		/* animation: slideInLeft ease 0.3s, fadeOut linear 1s 3s forwards; */
		transition: all linear 0.3s;
	}

	@@keyframes slideInLeft {
		from {
			opacity: 0;
			transform: translateX(calc(100% + 32px));
		}

		to {
			opacity: 1;
			transform: translateX(0);
		}
	}

	@@keyframes fadeOut {
		to {
			opacity: 0;
		}
	}

	.toast--success {
		border-color: #47d864;
	}

		.toast--success .toast__icon {
			color: #47d864;
		}

	.toast--info {
		border-color: #2f86eb;
	}

		.toast--info .toast__icon {
			color: #2f86eb;
		}

	.toast--warning {
		border-color: #ffc021;
	}

		.toast--warning .toast__icon {
			color: #ffc021;
		}

	.toast--error {
		border-color: #ff623d;
	}

		.toast--error .toast__icon {
			color: #ff623d;
		}

	.toast + .toast {
		margin-top: 24px;
	}

	.toast__icon {
		font-size: 24px;
	}

	.toast__icon,
	.toast__close {
		padding: 0 16px;
	}

	.toast__body {
		flex-grow: 1;
	}

	.toast__title {
		font-size: 16px;
		font-weight: 600;
		color: #333;
	}

	.toast__msg {
		font-size: 14px;
		color: #888;
		margin-top: 6px;
		line-height: 1.5;
	}

	.toast__close {
		font-size: 20px;
		color: rgba(0, 0, 0, 0.5);
		cursor: pointer;
	}

		.toast__close:hover {
			opacity: 0.6;
		}

	@@media only screen and (max-width: 480px) {
		.heading-top {
			width: 100%;
			padding: 0 20px;
		}

		#top-header div {
			width: 100%;
			padding: 0 5px;
			justify-content: center;
			gap: 10px;
		}

		.header-links {
			width: 220px;
		}

		.loginPartial {
			display: flex;
		}
	}

	.heading-top {
		display: flex;
		align-items: center;
		justify-content: space-between;
		padding: 0 120px;
		width: 100%;
	}
</style>